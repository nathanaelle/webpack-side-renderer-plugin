{"version":3,"sources":["webpack:///webpack/bootstrap f8f925225245338fb7a8","webpack:///./node_modules/source-map/source-map.js","webpack:///(webpack)-sources/lib/Source.js","webpack:///./node_modules/source-list-map/lib/index.js","webpack:///./node_modules/source-list-map/lib/helpers.js","webpack:///(webpack)-sources/lib/SourceAndMapMixin.js","webpack:///./node_modules/source-map/lib/util.js","webpack:///./node_modules/source-list-map/lib/SourceNode.js","webpack:///./node_modules/source-list-map/lib/CodeNode.js","webpack:///./node_modules/source-list-map/lib/base64-vlq.js","webpack:///external \"path\"","webpack:///./node_modules/source-map/lib/source-map-generator.js","webpack:///./node_modules/source-map/lib/base64-vlq.js","webpack:///./node_modules/source-map/lib/array-set.js","webpack:///./node_modules/source-list-map/lib/SourceListMap.js","webpack:///./node_modules/source-list-map/lib/SingleLineNode.js","webpack:///./node_modules/source-list-map/lib/MappingsContext.js","webpack:///./src/index.ts","webpack:///./src/internals/index.ts","webpack:///external \"jsdom\"","webpack:///external \"vm\"","webpack:///(webpack)-sources/lib/index.js","webpack:///./node_modules/source-map/lib/base64.js","webpack:///./node_modules/source-map/lib/mapping-list.js","webpack:///./node_modules/source-map/lib/source-map-consumer.js","webpack:///./node_modules/source-map/lib/binary-search.js","webpack:///./node_modules/source-map/lib/quick-sort.js","webpack:///./node_modules/source-map/lib/source-node.js","webpack:///(webpack)-sources/lib/RawSource.js","webpack:///./node_modules/source-list-map/lib/fromStringWithSourceMap.js","webpack:///(webpack)-sources/lib/OriginalSource.js","webpack:///(webpack)-sources/lib/SourceMapSource.js","webpack:///(webpack)-sources/lib/LineToLineMappedSource.js","webpack:///(webpack)-sources/lib/CachedSource.js","webpack:///(webpack)-sources/lib/ConcatSource.js","webpack:///(webpack)-sources/lib/ReplaceSource.js","webpack:///(webpack)-sources/lib/PrefixSource.js","webpack:///./src/internals/buildCode.ts"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrCA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnhaA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,0EAA0E;AAC1E,wFAAwF;AACxF,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAAmD;;;;;;;;AChInD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjEA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;ACxKA,iC;;;;;;ACAA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,SAAS;AACnD;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/ZA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;AC3IA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,0EAA0E;AAC1E,gFAAgF;AAChF,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0CAA2C;;;;;;;;AC5F3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1CA,oCAkBA;;;AAQC,iCAA8B;;;AAC1B,YAAQ,YAAe,WAAE;AACvB,iBAAW,aAAK;AAChB,iBAAM,QAAK;AACX,iBAAY,cAAK;AACjB,iBAAM,QAAI,CAAO;AACjB,iBAAU,YAAY;AACtB,iBAAa,eAAK;AAEvB;AAAC;AAEG,aAAW,aAAa,WAAQ,SAAc,cAAK;AACnD,aAAM,QAAU,QAAM,SAAM;AAC5B,aAAY,cAAa,WAAQ,SAAe,eAAK;AACrD,aAAa,eAAU,QAAa,gBAAM;AAE3C,YAAE,CAAC,CAAQ,QAAU,aAAI,OAAc,QAAU,cAAc,UAAE;AAC/D,iBAAU,YAAU,QACzB;AAAC;AAEE,YAAK,KAAU,cAAe,WAAE;AAC9B,iBAAM,QAAa,WAAQ,SAAS,SAAE,CAC3C;AAAM,eAAE;AACH,iBAAM,QAAa,WAAQ,SAAS,SACzC;AACD;AAEY;;;;8BAAmB;AACtB,qBAAO,OAAgB,iBAAM,KAAqB,qBAAK,KAChE;AAE4B;;;6CAAiB,aAA2D;AACvG;AACO,4CAAkC,UAAyB,yBAAK,KAAM,OAAM,KAAY,aAAc;oBAA1F;oBAAU;;AAC5B,oBAAS,MAAY,UAAiB,iBAAK,KAAM,OAAa;AAE3D,oBAAK,KAAU,cAAe,WAAE;AAC9B,yBAAM,QAAO,KAAa,aAAI,KAAM,KAAU,WACnD;AAAC;AAEG,qBAAkB,kBAAI,KAAQ,QAAc,aAC1C;AAAM,2BAAQ;mBACb,MAAM;AAET,qBAAW,WAAQ,QAAC,UAAa;AACjC,wBAAY,YAAO,OAAe,eAAW,WAAE;AACjD,+BAAkB,YAAO,OAC1B;AACD;AACD;AAAC,cAAO,OAAK,KAAE;AACH,4BAAO,OAAK,KAAI,IAAO;AAEnC;AACD;AAEoB;;;qCAAW,KAAc,MAAgC;AACzE,gBAAC,CAAI,IAAO,OAAe,eAAO,OAAE;AAChC,uBAAK,KACZ;AAAC;AACD,gBAAe,YAAO,IAAe,OAAM;AAErC,6BAAgC,QAC9B,iBAAwB;AAAvB,uBAAwB,CAAC,CAAE,KAAI,OAAQ,MAAc;aAD7C,EAET,OAAK,KAAO,OACd,eAAW,GAAe;AAAzB,uBAA2B,EAAc,cAAI;eAC5C,OAAC,UAAgB,OAAe;AACtC,oBAAS,MAAQ,MAAO;AACrB,oBAAI,QAAO,GAAE;AACT,2BAAC,CACR;AAAC;AACE,oBAAM,MAAI,MAAK,OAAO,GAAE;AACpB,2BACP;AAAC;AACK,uBAAM,MAAO,OAAC,CACrB;AAAC,eACH;AAEyB;;;0CAAW,KAAgC,QAAkB;AACrF,gBAAsB,MAAK,IAAe,OAAqB;AAC/D,gBAAiB;AACV;AACF,sBAAI;AACI,8BAAM,KAClB;AAJqC;AAMhC,mBAAU,UAAY,YAAK,KAAM,OAAK,KAAa,aAC1D;AACA;;;;;;AA/FD,kBA+FC;AAED,oBAAqC,SAAa,KAAqB;AACnE,QAAC,CAAQ,QAAe,eAAM,MAAE;AAC5B,eACP;AAAC;AACD,QAAS,MAAU,QAAK;AACrB,QAAI,QAAc,aAAO,QAAS,QAAO,QAAQ,IAAE;AAC/C,eACP;AAAC;AAEE,QAAC,OAAU,QAAc,UAAE;AACvB,eAAC,CACR;AAAC;AAEE,QAAC,CAAM,MAAQ,QAAM,MAAE;AACnB,eACP;AAAC;AAED,QAAc,eAAa,iBAAS;AAAR,eAAW,OAAc,aAAM,OAAS,QAAI,OAAS,OAAe;KAA5E;AACjB,QAAS,SAAO,WAAO,GAAE;AACrB,eACP;AAAC;AAEK,WACP;AAAC,C;;;;;;;;;;;;AC5ID,kCAA6C;AAC7C,iCAAyC;AACzC,iCAAkD;AAClD,+BAA6B;AAC7B,4CAA6C;AAE7C,6BAAoC;AAEvB,QAAwB,2BAAK,GAAyB;AAmBnE,0BAA8C,OAAoB;AACjE,QAAoB,iBAAG,IAAI,QAAgB;AAE7B,mBAAG,GAAQ,mBAAS,GAAgB;AAAvB,eAA4B,SAAgB,YAAQ,QAAM,MAAK,KAAQ,QAAM,MAAE,GAAS;;AACrG,mBAAG,GAAQ,mBAAS,GAAgB;AAAvB,eAA4B,SAAgB,YAAQ,QAAM,MAAK,KAAQ,QAAM,MAAE,GAAS;;AACrG,mBAAG,GAAO,kBAAS,GAAgB;AAAvB,eAA4B,SAAgB,YAAQ,QAAK,KAAK,KAAQ,QAAK,KAAE,GAAS;;AAClG,mBAAG,GAAO,kBAAS,GAAgB;AAAvB,eAA4B,SAAgB,YAAQ,QAAK,KAAK,KAAQ,QAAK,KAAE,GAAS;;AAClG,mBAAG,GAAM,iBAAS,GAAgB;AAAvB,eAA4B,SAAgB,YAAQ,QAAI,IAAK,KAAQ,QAAI,IAAE,GAAS;;AAE7G,QAAa;AACK,2BAAM;AACb,oBAAgB;AACZ;AAEH,0CAAY;AACnB,gBAAC,CAAO,OAAe,eAAiB,iBAAE;AACtC,uBAAgB,eAAE,UAA6C;AAC9D;AACE,kDAAY;AACZ,mCAAW,WAClB;AAAC;AACM,kDAAY,KAAe;AACvB,uCAAK,OAChB;AAAC;AACS,wDAAY;AACrB,mCAAW,KACZ;AAEF;AAXQ;AAWN,iBAZqB,CAaxB;AACD;AACA;AAtBoB;AAwBrB,QAAS,MAAG,IAAI,QAAK,MAAG,IAAU;AAElC,QAAK;AACD,YAAY,YAAC,IAAI,KAAM,OAAa;AACvC,YAAY,SAAO,IAAe;AAE/B,YAAC,CAAO,OAAe,eAAW,cAAI,OAAa,OAAQ,YAAgB,YAAE;AAC/E,kBAAM,IAAS,MAAwB,0BAAQ,QAChD;AAAC;AAEK,eACP;AAAC,MAAO,OAAK,KAAE;AACd,cACD;AACD;AAAC;AA/CD,2BA+CC;AAED,qBACiB,OAAe,KACD,aAAkB;AAChD,QAAoB,uBAAY,IAAC,UAAuB;AACvD,YAAa,UAA2B,OAAO,OAAY,aAAE,EAAM,MAAe;AAE5E,mCAA4B,SAAM,KAClC,KAAgB,gBAAc,cAC7B,MAAC,UAAQ;AACH,wBAAO,OAAK,KAAI,IAC5B;AACD,SAL0B;AAKxB,KARyB;AAUtB,mBAAY,IAAgB,gBAC5B,KAAC,UAA6C;AAC5C,kBAAU,OAAK,KAAG,IAAO,MAAO,iBAAQ;AAAP,mBAAQ,OAAQ,MACxD;SADU;AAEZ,KAJe;AAId;AAjBD,sBAiBC;AAED,6BAAsD,SAAe;AAC9D,eAAY,QAAC,UAAQ,SAAY;AACtC,YAAK;AACG,oBAAmB,mBAAQ,QAAK,MAAK,IAC7C;AAAC,UAAO,OAAK,KAAE;AACsB;AAC9B,mBACP;AACD;AACD,KARQ;AAQP;AAOD,yBAAyC;AAClC,WAAC,UAAkD;AAClD,sBAAY,KAAQ,QACrB,IAAa,aAAS,SACnB,OAAsB,sBAAY,YAAS,SAC9C,IAAE;gBAAK;gBAAW;gBAAW;gBAA0B;;AAC/C,wBAAO,OAAW,aAAY;AACnC,mBAAC,EAAW,sBACnB;AACF,SAPc;AAQf;AAAC;AAED,sBAAqD;AAC9C,WAAC,UAAgB;AACtB,YAAY,SAAS,OAAK;AAC1B,YAAe,YAAG,IAAI,kBAAS,UAAQ;AACvC,YAAe,YAAqB,mBAAK;AACnC,eAAC,EAAK,UAAW,sBAAW,sBACnC;AACD;AAAC;AAED,+BAA0C;AACnC;AAAG,YAAkB;eAAC,CAAO,OAAe,eACnD;;AAAC;AAED,4BAA2C;AAC1C,QAAkB,eAAG,OAAc,UAAQ,QAAQ,QAAW,YAAM;AAEjE,QAAa,aAAc,cAAM,MAAc,aAAE;AAC7C,eACP;AAAC;AACK,WAAC,OAAS,KAAa,cAE9B;AAAC;AAED,mCAAyC;AACxC,QAAU,OAA+B;AACnC,WAAC,QAAW,wDACnB;AAAC;AAED,sBAA4B;AAC3B,QAAU,OAA+C;AACnD,WAAK,KAAK,SACjB;AAAC;AAED,4BAAuC,KAAa;AAChD,QAAa,aAAS,SAAE;AAC1B,YAAU,OAAoD;AACxD,oBAAU,KAAC,UAAgE;AAC7E,gBAA0B,0BAAK,KAAE;AACnC,oBAAU,OAAgC;AACpC,uBACP;AAAC;AAED,gBAAU,OAA8B;AACpC,iBAAK,OAAK;AACR,mBACP;AACD,SAVY;AAUX;AAEE,QAA0B,0BAAS,SAAE;AACvC,YAAU,OAAoC;AACxC,eAAQ,QAAQ,QACvB;AAAC;AAED,QAAS,MAA8B;AACpC,QAAK,OAAS;AACX,WAAQ,QAAQ,QACvB;AAAC,C;;;;;;ACnLD,kC;;;;;;ACAA,+B;;;;;;ACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACdA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gBAAgB;;AAEhB,mBAAmB;AACnB,oBAAoB;;AAEpB,gBAAgB;AAChB,gBAAgB;;AAEhB,gBAAgB;AAChB,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClEA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9EA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sDAAsD,YAAY;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wCAAwC;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,mBAAmB,EAAE;AACpiBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA,6BAA6B,MAAM;AACnC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C,qBAAqB,+CAA+C;AACpE;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACzjCA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC9GA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA,WAAW,SAAS;AACpB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;;;;;;ACjHA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH,UAAU;AACV;;AAEA;;;;;;;;AC5ZA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AChDA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC1MA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;AC5DA,kCAAsD,OAAiB,OAAkB;AACxF,QAAgB,aAAiB,eAAY,YAAQ,QAAO,OAAY;AAErE,QAAM,UAAQ,IAAE;AACb,gBAAU,OAAK,KAAY,YAAc,YAAtC,CACT;AAAC;AAEE,QAAC,CAAY,YAAY,YAAe,eAAQ,QAAE;AACpD,cAAM,IAAS,MAA2B,6BAAQ,QACnD;AAAC;AAED,QAAiB,cAAkB,gBAAM,OAAc;AAEvD,QAAa,UAAyB,uBAAY,aAAc;AAChE,QAAY,SAAiB,eAAQ,SAAY,YAAc,aACzD,IAAY,YAAM,OAAe,cAC9B,OAAY,aAAqB;AAE1C,QAAgB,aAAsB,oBAAQ,SAAc;AAEtD,WAAC,EAAQ,gBAChB;AAAC;AArBD,mCAqBC;AAED,wBAAwC,QAA0B,YAA0B;AACrF,kBACF,IAAC,UAAyB;AAC7B,YAAe,YAAc,YAAW,WAAM;AAC9C,YAAc,WAAa,WAAM;AAC3B,eAAC,EAAW,sBACnB;AACD,KANc;AAMb;AAID,wBAA2D;AACvD,QAAa,iBAAS,QAAgB,iBAAc,aAAgB,iBAAQ,IAAE;AAC1E,yBAAU;AAAT,mBACR;;AAAC;AACK,qBAAW;AAAV,eAAuB,eAC/B;;AAAC;AAED,qBAA4C,eAAkB;AAC7D,QAAY,SAAc,YAAO;AAC3B,WAAC,UAA0B;AACnB,sBAAQ,QAAC,UAAS;AAC9B,gBAAiB,cAAS,OAAM,MAAU;AACvC,gBAAY,YAAe,eAAO,OAAE;AACjC,sBAAM,QAAc,YAC1B;AACD;AAAE;AACI,eACP;AACD;AAAC;AAED,qBAAyC,QAAe;AACjD,WAAM,MAAU,YAAQ;AACxB,WACP;AAAC;AAoBD,yBAAsC,OAAkB;AACvD,QAAgB;AACN,mBAAI;AACH,oBAAI;AACJ,oBAAI;AACN,kBAAI;AACH,mBACT;AAN+B;AAQ1B,WAAY,YAAY,YAAO,OAAO,OACvC,IAAoB,oBACjB,OAAmB,oBAC5B;AAAC;AASD,4BAAkC,GAAa;AAC9C,QAAU,OAAY,EAAK;AAC3B,QAAQ,KAAY,EAAG;AACvB,QAAS,QAAI,EAAM;AAChB,QAAE,EAAE,EAAM,iBAAmB,QAAE;AAC5B,gBAAG,CACT;AAAC;AAEK,WAAC,EAAM,YAAI,QAAK,UACvB;AAAC;AAED,4BAA6C,MAAgB;AACxD,SAAU,UAAE,EAAI,MAAI,EAAI;AACxB,SAAU,UAAE,EAAK,OAAI,EAAG;AACxB,SAAW,WAAE,EAAM,QAAI,EAAG;AAC1B,SAAS,SAAE,EAAM,QAAI,EAAI;AAE5B,MAAM,MAAQ,QAAC,UAAiB;AAC5B,aAAW,WAAM,QAAI,EAC1B;AAAE;AACI,WACP;AAAC;AAED,gCAAgD,aAA0B;AACnE,WAAO,OAAK,KAAY,YAAQ,QACjC,IAAuB,uBAAc,cAClC,OAAiB,iBACnB,KAAc,cACf,IACN;AAAC;AAQD,gCAAwD;AACjD,WAAC,UAAa,MAAmC;AACtD,YAAW,QAAsB,YAAU,UAAK;AAC1C,eAAC,EAAM,YAAK,UACnB;AACD;AAAC;AAED,yBAA4C;AACrC,WAAE,EAAM,UACf;AAAC;AAGD,sBAAyC,GAAqB;AAC1D,QAAE,EAAM,QAAI,EAAO,OAAE;AACjB,eAAC,CACR;AAAC;AACE,QAAE,EAAM,QAAI,EAAO,OAAE;AACjB,eACP;AAAC;AACK,WACP;AAAC;AAED,sBAAyC;AAClC,WAAE,EACT;AAAC;AAED,6BAA4C,OAAkB;AACvD,iBAAU,IAAC,UAAiB;AACjC,YAAW,UAAc,YAAO,OAAM;AACnC,YAAQ,mBAAkB,OAAE;AACvB,sBAAU,QAClB;AAAC;AACE,YAAQ,mBAAmB,QAAE;AACxB,sBAAU,QAClB;AAAC;AACK,eACP;AAAE,KATU,EASL,KACR;AAAC,C","file":"wsr-plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f8f925225245338fb7a8","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/source-map.js\n// module id = 0\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\n\r\nclass Source {\r\n\r\n\tsource() {\r\n\t\tthrow new Error(\"Abstract\");\r\n\t}\r\n\r\n\tsize() {\r\n\t\treturn this.source().length;\r\n\t}\r\n\r\n\tmap(options) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tsourceAndMap(options) {\r\n\t\treturn {\r\n\t\t\tsource: this.source(),\r\n\t\t\tmap: this.map()\r\n\t\t};\r\n\t}\r\n\r\n\tnode() {\r\n\t\tthrow new Error(\"Abstract\");\r\n\t}\r\n\r\n\tlistNode() {\r\n\t\tthrow new Error(\"Abstract\");\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\tvar source = this.source();\r\n\t\thash.update(source || \"\");\r\n\t}\r\n}\r\n\r\nmodule.exports = Source;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/Source.js\n// module id = 1\n// module chunks = 0","exports.SourceListMap = require(\"./SourceListMap\");\r\nexports.SourceNode = require(\"./SourceNode\");\r\nexports.SingleLineNode = require(\"./SingleLineNode\");\r\nexports.CodeNode = require(\"./CodeNode\");\r\nexports.MappingsContext = require(\"./MappingsContext\");\r\nexports.fromStringWithSourceMap = require(\"./fromStringWithSourceMap\");\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-list-map/lib/index.js\n// module id = 2\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nexports.getNumberOfLines = function getNumberOfLines(str) {\r\n\tlet nr = -1;\r\n\tlet idx = -1;\r\n\tdo {\r\n\t\tnr++\r\n\t\tidx = str.indexOf(\"\\n\", idx + 1);\r\n\t} while(idx >= 0);\r\n\treturn nr;\r\n};\r\n\r\nexports.getUnfinishedLine = function getUnfinishedLine(str) {\r\n\tconst idx = str.lastIndexOf(\"\\n\");\r\n\tif(idx === -1)\r\n\t\treturn str.length;\r\n\telse\r\n\t\treturn str.length - idx - 1;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-list-map/lib/helpers.js\n// module id = 3\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nmodule.exports = function mixinSourceAndMap(proto) {\r\n\tproto.map = function(options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.columns === false) {\r\n\t\t\treturn this.listMap(options).toStringWithSourceMap({\r\n\t\t\t\tfile: \"x\"\r\n\t\t\t}).map;\r\n\t\t}\r\n\r\n\t\treturn this.node(options).toStringWithSourceMap({\r\n\t\t\tfile: \"x\"\r\n\t\t}).map.toJSON();\r\n\t};\r\n\r\n\tproto.sourceAndMap = function(options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.columns === false) {\r\n\t\t\t//console.log(this.listMap(options).debugInfo());\r\n\t\t\treturn this.listMap(options).toStringWithSourceMap({\r\n\t\t\t\tfile: \"x\"\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar res = this.node(options).toStringWithSourceMap({\r\n\t\t\tfile: \"x\"\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tsource: res.code,\r\n\t\t\tmap: res.map.toJSON()\r\n\t\t};\r\n\t};\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/SourceAndMapMixin.js\n// module id = 4\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/util.js\n// module id = 5\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst base64VLQ = require(\"./base64-vlq\");\r\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\r\nconst getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\r\n\r\nconst LINE_MAPPING = \";AACA\";\r\n\r\nclass SourceNode {\r\n\r\n\tconstructor(generatedCode, source, originalSource, startingLine) {\r\n\t\tthis.generatedCode = generatedCode;\r\n\t\tthis.originalSource = originalSource;\r\n\t\tthis.source = source;\r\n\t\tthis.startingLine = startingLine || 1;\r\n\t\tthis._numberOfLines = getNumberOfLines(this.generatedCode);\r\n\t\tthis._endsWithNewLine = generatedCode[generatedCode.length - 1] === \"\\n\";\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new SourceNode(this.generatedCode, this.source, this.originalSource, this.startingLine);\r\n\t}\r\n\r\n\tgetGeneratedCode() {\r\n\t\treturn this.generatedCode;\r\n\t}\r\n\r\n\taddGeneratedCode(code) {\r\n\t\tthis.generatedCode += code;\r\n\t\tthis._numberOfLines += getNumberOfLines(code);\r\n\t\tthis._endsWithNewLine = code[code.length - 1] === \"\\n\";\r\n\t}\r\n\r\n\tgetMappings(mappingsContext) {\r\n\t\tif(!this.generatedCode)\r\n\t\t\treturn \"\";\r\n\t\tconst lines = this._numberOfLines;\r\n\t\tconst sourceIdx = mappingsContext.ensureSource(this.source, this.originalSource);\r\n\t\tlet mappings = \"A\"; // generated column 0\r\n\t\tif(mappingsContext.unfinishedGeneratedLine)\r\n\t\t\tmappings = \",\" + base64VLQ.encode(mappingsContext.unfinishedGeneratedLine);\r\n\t\tmappings += base64VLQ.encode(sourceIdx - mappingsContext.currentSource); // source index\r\n\t\tmappings += base64VLQ.encode(this.startingLine - mappingsContext.currentOriginalLine); // original line index\r\n\t\tmappings += \"A\"; // original column 0\r\n\t\tmappingsContext.currentSource = sourceIdx;\r\n\t\tmappingsContext.currentOriginalLine = this.startingLine + lines - 1;\r\n\t\tconst unfinishedGeneratedLine = mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode)\r\n\t\tmappings += Array(lines).join(LINE_MAPPING);\r\n\t\tif(unfinishedGeneratedLine === 0) {\r\n\t\t\tmappings += \";\";\r\n\t\t} else {\r\n\t\t\tif(lines !== 0) {\r\n\t\t\t\tmappings += LINE_MAPPING;\r\n\t\t\t}\r\n\t\t\tmappingsContext.currentOriginalLine++;\r\n\t\t}\r\n\t\treturn mappings;\r\n\t}\r\n\r\n\tmapGeneratedCode(fn) {\r\n\t\tthrow new Error(\"Cannot map generated code on a SourceMap. Normalize to SingleLineNode first.\");\r\n\t}\r\n\r\n\tgetNormalizedNodes() {\r\n\t\tvar results = [];\r\n\t\tvar currentLine = this.startingLine;\r\n\t\tvar generatedCode = this.generatedCode;\r\n\t\tvar index = 0;\r\n\t\tvar indexEnd = generatedCode.length;\r\n\t\twhile(index < indexEnd) {\r\n\t\t\t// get one generated line\r\n\t\t\tvar nextLine = generatedCode.indexOf(\"\\n\", index) + 1;\r\n\t\t\tif(nextLine === 0) nextLine = indexEnd;\r\n\t\t\tvar lineGenerated = generatedCode.substr(index, nextLine - index);\r\n\r\n\t\t\tresults.push(new SingleLineNode(lineGenerated, this.source, this.originalSource, currentLine));\r\n\r\n\t\t\t// move cursors\r\n\t\t\tindex = nextLine;\r\n\t\t\tcurrentLine++;\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\r\n\tmerge(otherNode) {\r\n\t\tif(otherNode instanceof SourceNode) {\r\n\t\t\treturn this.mergeSourceNode(otherNode);\r\n\t\t} else if(otherNode instanceof SingleLineNode) {\r\n\t\t\treturn this.mergeSingleLineNode(otherNode);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tmergeSourceNode(otherNode) {\r\n\t\tif(this.source === otherNode.source &&\r\n\t\t\tthis._endsWithNewLine &&\r\n\t\t\tthis.startingLine + this._numberOfLines === otherNode.startingLine) {\r\n\t\t\tthis.generatedCode += otherNode.generatedCode;\r\n\t\t\tthis._numberOfLines += otherNode._numberOfLines;\r\n\t\t\tthis._endsWithNewLine = otherNode._endsWithNewLine;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tmergeSingleLineNode(otherNode) {\r\n\t\tif(this.source === otherNode.source &&\r\n\t\t\tthis._endsWithNewLine &&\r\n\t\t\tthis.startingLine + this._numberOfLines === otherNode.line &&\r\n\t\t\totherNode._numberOfLines <= 1) {\r\n\t\t\tthis.addSingleLineNode(otherNode);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddSingleLineNode(otherNode) {\r\n\t\tthis.generatedCode += otherNode.generatedCode;\r\n\t\tthis._numberOfLines += otherNode._numberOfLines\r\n\t\tthis._endsWithNewLine = otherNode._endsWithNewLine;\r\n\t}\r\n}\r\n\r\nmodule.exports = SourceNode;\r\nconst SingleLineNode = require(\"./SingleLineNode\"); // circular dependency\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-list-map/lib/SourceNode.js\n// module id = 6\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\r\nconst getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\r\n\r\nclass CodeNode {\r\n\tconstructor(generatedCode) {\r\n\t\tthis.generatedCode = generatedCode;\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new CodeNode(this.generatedCode);\r\n\t}\r\n\r\n\tgetGeneratedCode() {\r\n\t\treturn this.generatedCode;\r\n\t}\r\n\r\n\tgetMappings(mappingsContext) {\r\n\t\tconst lines = getNumberOfLines(this.generatedCode);\r\n\t\tconst mapping = Array(lines+1).join(\";\");\r\n\t\tif(lines > 0) {\r\n\t\t\tmappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode);\r\n\t\t\tif(mappingsContext.unfinishedGeneratedLine > 0) {\r\n\t\t\t\treturn mapping + \"A\";\r\n\t\t\t} else {\r\n\t\t\t\treturn mapping;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst prevUnfinished = mappingsContext.unfinishedGeneratedLine;\r\n\t\t\tmappingsContext.unfinishedGeneratedLine += getUnfinishedLine(this.generatedCode);\r\n\t\t\tif(prevUnfinished === 0 && mappingsContext.unfinishedGeneratedLine > 0) {\r\n\t\t\t\treturn \"A\";\r\n\t\t\t} else {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\taddGeneratedCode(generatedCode) {\r\n\t\tthis.generatedCode += generatedCode;\r\n\t}\r\n\r\n\tmapGeneratedCode(fn) {\r\n\t\tconst generatedCode = fn(this.generatedCode);\r\n\t\treturn new CodeNode(generatedCode);\r\n\t}\r\n\r\n\tgetNormalizedNodes() {\r\n\t\treturn [this];\r\n\t}\r\n\r\n\tmerge(otherNode) {\r\n\t\tif(otherNode instanceof CodeNode) {\r\n\t\t\tthis.generatedCode += otherNode.generatedCode;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nmodule.exports = CodeNode;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-list-map/lib/CodeNode.js\n// module id = 7\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n *\r\n * Based on the Base 64 VLQ implementation in Closure Compiler:\r\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\r\n *\r\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above\r\n *    copyright notice, this list of conditions and the following\r\n *    disclaimer in the documentation and/or other materials provided\r\n *    with the distribution.\r\n *  * Neither the name of Google Inc. nor the names of its\r\n *    contributors may be used to endorse or promote products derived\r\n *    from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/*eslint no-bitwise:0,quotes:0,global-strict:0*/\r\n\r\nvar charToIntMap = {};\r\nvar intToCharMap = {};\r\n\r\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\n  .split('')\r\n  .forEach(function (ch, index) {\r\n    charToIntMap[ch] = index;\r\n    intToCharMap[index] = ch;\r\n  });\r\n\r\nvar base64 = {};\r\n/**\r\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\r\n */\r\nbase64.encode = function base64_encode(aNumber) {\r\n  if (aNumber in intToCharMap) {\r\n    return intToCharMap[aNumber];\r\n  }\r\n  throw new TypeError(\"Must be between 0 and 63: \" + aNumber);\r\n};\r\n\r\n/**\r\n * Decode a single base 64 digit to an integer.\r\n */\r\nbase64.decode = function base64_decode(aChar) {\r\n  if (aChar in charToIntMap) {\r\n    return charToIntMap[aChar];\r\n  }\r\n  throw new TypeError(\"Not a valid base 64 digit: \" + aChar);\r\n};\r\n\r\n\r\n\r\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\r\n// length quantities we use in the source map spec, the first bit is the sign,\r\n// the next four bits are the actual value, and the 6th bit is the\r\n// continuation bit. The continuation bit tells us whether there are more\r\n// digits in this value following this digit.\r\n//\r\n//   Continuation\r\n//   |    Sign\r\n//   |    |\r\n//   V    V\r\n//   101011\r\n\r\nvar VLQ_BASE_SHIFT = 5;\r\n\r\n// binary: 100000\r\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\r\n\r\n// binary: 011111\r\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\r\n\r\n// binary: 100000\r\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\r\n\r\n/**\r\n * Converts from a two-complement value to a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\r\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\r\n */\r\nfunction toVLQSigned(aValue) {\r\n  return aValue < 0\r\n    ? ((-aValue) << 1) + 1\r\n    : (aValue << 1) + 0;\r\n}\r\n\r\n/**\r\n * Converts to a two-complement value from a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\r\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\r\n */\r\nfunction fromVLQSigned(aValue) {\r\n  var isNegative = (aValue & 1) === 1;\r\n  var shifted = aValue >> 1;\r\n  return isNegative\r\n    ? -shifted\r\n    : shifted;\r\n}\r\n\r\n/**\r\n * Returns the base 64 VLQ encoded value.\r\n */\r\nexports.encode = function base64VLQ_encode(aValue) {\r\n  var encoded = \"\";\r\n  var digit;\r\n\r\n  var vlq = toVLQSigned(aValue);\r\n\r\n  do {\r\n    digit = vlq & VLQ_BASE_MASK;\r\n    vlq >>>= VLQ_BASE_SHIFT;\r\n    if (vlq > 0) {\r\n      // There are still more digits in this value, so we must make sure the\r\n      // continuation bit is marked.\r\n      digit |= VLQ_CONTINUATION_BIT;\r\n    }\r\n    encoded += base64.encode(digit);\r\n  } while (vlq > 0);\r\n\r\n  return encoded;\r\n};\r\n\r\n/**\r\n * Decodes the next base 64 VLQ value from the given string and returns the\r\n * value and the rest of the string via the out parameter.\r\n */\r\nexports.decode = function base64VLQ_decode(aStr, aOutParam) {\r\n  var i = 0;\r\n  var strLen = aStr.length;\r\n  var result = 0;\r\n  var shift = 0;\r\n  var continuation, digit;\r\n\r\n  do {\r\n    if (i >= strLen) {\r\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\r\n    }\r\n    digit = base64.decode(aStr.charAt(i++));\r\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\r\n    digit &= VLQ_BASE_MASK;\r\n    result = result + (digit << shift);\r\n    shift += VLQ_BASE_SHIFT;\r\n  } while (continuation);\r\n\r\n  aOutParam.value = fromVLQSigned(result);\r\n  aOutParam.rest = aStr.slice(i);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-list-map/lib/base64-vlq.js\n// module id = 8\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 9\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/source-map-generator.js\n// module id = 10\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/base64-vlq.js\n// module id = 11\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/array-set.js\n// module id = 12\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst CodeNode = require(\"./CodeNode\");\r\nconst SourceNode = require(\"./SourceNode\");\r\nconst MappingsContext = require(\"./MappingsContext\");\r\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\r\n\r\nclass SourceListMap {\r\n\r\n\tconstructor(generatedCode, source, originalSource) {\r\n\t\tif(Array.isArray(generatedCode)) {\r\n\t\t\tthis.children = generatedCode;\r\n\t\t} else {\r\n\t\t\tthis.children = [];\r\n\t\t\tif(generatedCode || source)\r\n\t\t\t\tthis.add(generatedCode, source, originalSource);\r\n\t\t}\r\n\t}\r\n\r\n\tadd(generatedCode, source, originalSource) {\r\n\t\tif(typeof generatedCode === \"string\") {\r\n\t\t\tif(source) {\r\n\t\t\t\tthis.children.push(new SourceNode(generatedCode, source, originalSource));\r\n\t\t\t} else if(this.children.length > 0 && this.children[this.children.length - 1] instanceof CodeNode) {\r\n\t\t\t\tthis.children[this.children.length - 1].addGeneratedCode(generatedCode);\r\n\t\t\t} else {\r\n\t\t\t\tthis.children.push(new CodeNode(generatedCode));\r\n\t\t\t}\r\n\t\t} else if(generatedCode.getMappings && generatedCode.getGeneratedCode) {\r\n\t\t\tthis.children.push(generatedCode);\r\n\t\t} else if(generatedCode.children) {\r\n\t\t\tgeneratedCode.children.forEach(function(sln) {\r\n\t\t\t\tthis.children.push(sln);\r\n\t\t\t}, this);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid arguments to SourceListMap.protfotype.add: Expected string, Node or SourceListMap\");\r\n\t\t}\r\n\t};\r\n\r\n\tpreprend(generatedCode, source, originalSource) {\r\n\t\tif(typeof generatedCode === \"string\") {\r\n\t\t\tif(source) {\r\n\t\t\t\tthis.children.unshift(new SourceNode(generatedCode, source, originalSource));\r\n\t\t\t} else if(this.children.length > 0 && this.children[this.children.length - 1].preprendGeneratedCode) {\r\n\t\t\t\tthis.children[this.children.length - 1].preprendGeneratedCode(generatedCode);\r\n\t\t\t} else {\r\n\t\t\t\tthis.children.unshift(new CodeNode(generatedCode));\r\n\t\t\t}\r\n\t\t} else if(generatedCode.getMappings && generatedCode.getGeneratedCode) {\r\n\t\t\tthis.children.unshift(generatedCode);\r\n\t\t} else if(generatedCode.children) {\r\n\t\t\tgeneratedCode.children.slice().reverse().forEach(function(sln) {\r\n\t\t\t\tthis.children.unshift(sln);\r\n\t\t\t}, this);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid arguments to SourceListMap.protfotype.prerend: Expected string, Node or SourceListMap\");\r\n\t\t}\r\n\t};\r\n\r\n\tmapGeneratedCode(fn) {\r\n\t\tconst normalizedNodes = [];\r\n\t\tthis.children.forEach(function(sln) {\r\n\t\t\tsln.getNormalizedNodes().forEach(function(newNode) {\r\n\t\t\t\tnormalizedNodes.push(newNode);\r\n\t\t\t});\r\n\t\t});\r\n\t\tconst optimizedNodes = [];\r\n\t\tnormalizedNodes.forEach(function(sln) {\r\n\t\t\tsln = sln.mapGeneratedCode(fn);\r\n\t\t\tif(optimizedNodes.length === 0) {\r\n\t\t\t\toptimizedNodes.push(sln);\r\n\t\t\t} else {\r\n\t\t\t\tconst last = optimizedNodes[optimizedNodes.length - 1];\r\n\t\t\t\tconst mergedNode = last.merge(sln);\r\n\t\t\t\tif(mergedNode) {\r\n\t\t\t\t\toptimizedNodes[optimizedNodes.length - 1] = mergedNode;\r\n\t\t\t\t} else {\r\n\t\t\t\t\toptimizedNodes.push(sln);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn new SourceListMap(optimizedNodes);\r\n\t};\r\n\r\n\ttoString() {\r\n\t\treturn this.children.map(function(sln) {\r\n\t\t\treturn sln.getGeneratedCode();\r\n\t\t}).join(\"\");\r\n\t};\r\n\r\n\ttoStringWithSourceMap(options) {\r\n\t\tconst mappingsContext = new MappingsContext();\r\n\t\tconst source = this.children.map(function(sln) {\r\n\t\t\treturn sln.getGeneratedCode();\r\n\t\t}).join(\"\");\r\n\t\tconst mappings = this.children.map(function(sln) {\r\n\t\t\treturn sln.getMappings(mappingsContext);\r\n\t\t}).join(\"\");\r\n\t\tconst arrays = mappingsContext.getArrays();\r\n\t\treturn {\r\n\t\t\tsource: source,\r\n\t\t\tmap: {\r\n\t\t\t\tversion: 3,\r\n\t\t\t\tfile: options && options.file,\r\n\t\t\t\tsources: arrays.sources,\r\n\t\t\t\tsourcesContent: mappingsContext.hasSourceContent ? arrays.sourcesContent : undefined,\r\n\t\t\t\tmappings: mappings\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\nmodule.exports = SourceListMap;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-list-map/lib/SourceListMap.js\n// module id = 13\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst base64VLQ = require(\"./base64-vlq\");\r\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\r\nconst getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\r\n\r\nconst LINE_MAPPING = \";AAAA\";\r\n\r\nclass SingleLineNode {\r\n\r\n\tconstructor(generatedCode, source, originalSource, line) {\r\n\t\tthis.generatedCode = generatedCode;\r\n\t\tthis.originalSource = originalSource;\r\n\t\tthis.source = source;\r\n\t\tthis.line = line || 1;\r\n\t\tthis._numberOfLines = getNumberOfLines(this.generatedCode);\r\n\t\tthis._endsWithNewLine = generatedCode[generatedCode.length - 1] === \"\\n\";\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new SingleLineNode(this.generatedCode, this.source, this.originalSource, this.line);\r\n\t}\r\n\r\n\tgetGeneratedCode() {\r\n\t\treturn this.generatedCode;\r\n\t}\r\n\r\n\tgetMappings(mappingsContext) {\r\n\t\tif(!this.generatedCode)\r\n\t\t\treturn \"\";\r\n\t\tconst lines = this._numberOfLines;\r\n\t\tconst sourceIdx = mappingsContext.ensureSource(this.source, this.originalSource);\r\n\t\tlet mappings = \"A\"; // generated column 0\r\n\t\tif(mappingsContext.unfinishedGeneratedLine)\r\n\t\t\tmappings = \",\" + base64VLQ.encode(mappingsContext.unfinishedGeneratedLine);\r\n\t\tmappings += base64VLQ.encode(sourceIdx - mappingsContext.currentSource); // source index\r\n\t\tmappings += base64VLQ.encode(this.line - mappingsContext.currentOriginalLine); // original line index\r\n\t\tmappings += \"A\"; // original column 0\r\n\t\tmappingsContext.currentSource = sourceIdx;\r\n\t\tmappingsContext.currentOriginalLine = this.line;\r\n\t\tconst unfinishedGeneratedLine = mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode)\r\n\t\tmappings += Array(lines).join(LINE_MAPPING);\r\n\t\tif(unfinishedGeneratedLine === 0) {\r\n\t\t\tmappings += \";\";\r\n\t\t} else {\r\n\t\t\tif(lines !== 0)\r\n\t\t\t\tmappings += LINE_MAPPING;\r\n\t\t}\r\n\t\treturn mappings;\r\n\t}\r\n\r\n\tgetNormalizedNodes() {\r\n\t\treturn [this];\r\n\t}\r\n\r\n\tmapGeneratedCode(fn) {\r\n\t\tconst generatedCode = fn(this.generatedCode);\r\n\t\treturn new SingleLineNode(generatedCode, this.source, this.originalSource, this.line);\r\n\t}\r\n\r\n\tmerge(otherNode) {\r\n\t\tif(otherNode instanceof SingleLineNode) {\r\n\t\t\treturn this.mergeSingleLineNode(otherNode);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tmergeSingleLineNode(otherNode) {\r\n\t\tif(this.source === otherNode.source &&\r\n\t\t\tthis.originalSource === otherNode.originalSource) {\r\n\t\t\tif(this.line === otherNode.line) {\r\n\t\t\t\tthis.generatedCode += otherNode.generatedCode;\r\n\t\t\t\tthis._numberOfLines += otherNode._numberOfLines;\r\n\t\t\t\tthis._endsWithNewLine = otherNode._endsWithNewLine;\r\n\t\t\t\treturn this;\r\n\t\t\t} else if(this.line + 1 === otherNode.line && \r\n\t\t\t\tthis._endsWithNewLine &&\r\n\t\t\t\tthis._numberOfLines === 1 && \r\n\t\t\t\totherNode._numberOfLines <= 1) {\r\n\t\t\t\treturn new SourceNode(this.generatedCode + otherNode.generatedCode, this.source, this.originalSource, this.line);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nmodule.exports = SingleLineNode;\r\n\r\nconst SourceNode = require(\"./SourceNode\"); // circular dependency\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-list-map/lib/SingleLineNode.js\n// module id = 14\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass MappingsContext {\r\n\tconstructor() {\r\n\t\tthis.sourcesIndices = new Map();\r\n\t\tthis.sourcesContent = new Map();\r\n\t\tthis.hasSourceContent = false;\r\n\t\tthis.currentOriginalLine = 1;\r\n\t\tthis.currentSource = 0;\r\n\t\tthis.unfinishedGeneratedLine = false;\r\n\t}\r\n\r\n\tensureSource(source, originalSource) {\r\n\t\tlet idx = this.sourcesIndices.get(source);\r\n\t\tif(typeof idx === \"number\") {\r\n\t\t\treturn idx;\r\n\t\t}\r\n\t\tidx = this.sourcesIndices.size;\r\n\t\tthis.sourcesIndices.set(source, idx);\r\n\t\tthis.sourcesContent.set(source, originalSource)\r\n\t\tif(typeof originalSource === \"string\")\r\n\t\t\tthis.hasSourceContent = true;\r\n\t\treturn idx;\r\n\t}\r\n\r\n\tgetArrays() {\r\n\t\tconst sources = [];\r\n\t\tconst sourcesContent = [];\r\n\r\n\t\tfor(const pair of this.sourcesContent) {\r\n\t\t\tsources.push(pair[0]);\r\n\t\t\tsourcesContent.push(pair[1]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsources,\r\n\t\t\tsourcesContent\r\n\t\t};\r\n\t}\r\n}\r\nmodule.exports = MappingsContext;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-list-map/lib/MappingsContext.js\n// module id = 15\n// module chunks = 0","import { JSDOM }\t\tfrom 'jsdom'\nimport\t{ Compiler, Plugin }\tfrom 'webpack'\nimport\t* as internals\t\tfrom './internals'\n\nexport\ttype IRendererOptions\t\t= internals.IRendererOptions\nexport\ttype Renderer\t\t\t= internals.Renderer\nexport\ttype RendererOutput\t\t= internals.RendererOutput\nexport\ttype RendererOutputRaw\t\t= internals.RendererOutputRaw\nexport\ttype IRendererMultipleOutput\t= internals.IRendererMultipleOutput\n\nexport interface IOptions {\n\tdropAssets?: string[]|string\n\tentry?:\tstring\n\texportAttrs?: string[]|string\n\tpaths?: string[]|string\n\tpathsFunc?: string|false\n\tpublicPrefix?: string\n\thasOwnProperty(key: string): boolean\n}\n\nexport default class WebpackSideRenderer implements Plugin {\n\tprivate\tdropAssets: string[]\n\tprivate\tentry: string\n\tprivate\texportAttrs: string[]\n\tprivate\tpaths: string[]\n\tprivate pathsFunc: undefined | string\n\tprivate publicPrefix: string\n\n\tconstructor(options?: IOptions) {\n\t\tif (options === undefined) {\n\t\t\tthis.dropAssets = []\n\t\t\tthis.entry = ''\n\t\t\tthis.exportAttrs = []\n\t\t\tthis.paths =  [ '/' ]\n\t\t\tthis.pathsFunc = undefined\n\t\t\tthis.publicPrefix = ''\n\t\t\treturn\n\t\t}\n\n\t\tthis.dropAssets = paramArray(options, 'dropAssets', [])\n\t\tthis.entry = options.entry || ''\n\t\tthis.exportAttrs = paramArray(options, 'exportAttrs', [])\n\t\tthis.publicPrefix = options.publicPrefix || ''\n\n\t\tif ( !!options.pathsFunc && typeof options.pathsFunc === 'string') {\n\t\t\tthis.pathsFunc = options.pathsFunc\n\t\t}\n\n\t\tif (this.pathsFunc === undefined) {\n\t\t\tthis.paths = paramArray(options, 'paths', [ '/' ])\n\t\t} else {\n\t\t\tthis.paths = paramArray(options, 'paths', [ ])\n\t\t}\n\t}\n\n\tpublic apply(compiler: Compiler): void {\n\t\tcompiler.plugin('after-compile', this.handle_after_compile.bind(this))\n\t}\n\n\tprivate handle_after_compile(compilation: any, done: (err?: Error, result?: any, ...args: any[]) => void): void {\n\t\ttry {\n\t\t\tconst { sourceCode, assets } = internals.BuildSourceCodeAndAssets(this.entry, this.exportAttrs, compilation)\n\t\t\tconst dom = internals.CompileAndGetDOM(this.entry, sourceCode)\n\n\t\t\tif (this.pathsFunc !== undefined) {\n\t\t\t\tthis.paths = this.extractPaths(dom, this.pathsFunc, assets)\n\t\t\t}\n\n\t\t\tthis.webpackSideRender(dom, assets, compilation)\n\t\t\t\t.then(() => done())\n\t\t\t\t.catch(done)\n\n\t\t\tthis.dropAssets.forEach((toDelete) => {\n\t\t\t\tif (compilation.assets.hasOwnProperty(toDelete)) {\n\t\t\t\t\tdelete\tcompilation.assets[toDelete]\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (err) {\n\t\t\tcompilation.errors.push(err.stack)\n\t\t\tdone()\n\t\t}\n\t}\n\n\tprivate extractPaths(dom: JSDOM, attr: string, assets: internals.IAssetsIndex): string[] {\n\t\tif (!dom.window.hasOwnProperty(attr)) {\n\t\t\treturn\tthis.paths\n\t\t}\n\t\tconst pathsFunc = (dom.window as any)[attr]\n\n\t\treturn\t(pathsFunc(assets) as string[])\n\t\t\t.filter((e: string): boolean => !!e && typeof e === 'string')\n\t\t\t.concat(this.paths)\n\t\t\t.sort((a: string, b: string) => a.localeCompare(b))\n\t\t\t.reduce((paths: string[], p: string) => {\n\t\t\t\tconst len = paths.length\n\t\t\t\tif (len === 0) {\n\t\t\t\t\treturn [ p ]\n\t\t\t\t}\n\t\t\t\tif (paths[len - 1] === p) {\n\t\t\t\t\treturn\tpaths\n\t\t\t\t}\n\t\t\t\treturn paths.concat([ p ])\n\t\t\t}, [])\n\t}\n\n\tprivate webpackSideRender(dom: JSDOM, assets: internals.IAssetsIndex, compilation: any): Promise<string[]> {\n\t\tconst\twsr: Renderer\t= ((dom.window as any).default) as Renderer\n\t\tconst\tcoreOptions: IRendererOptions = {\n\t\t\tassets,\n\t\t\tpath: '',\n\t\t\tpublicPrefix: this.publicPrefix,\n\t\t}\n\n\t\treturn\tinternals.renderPaths(this.paths, wsr, coreOptions, compilation)\n\t}\n}\n\nfunction paramArray(options: IOptions, key: string,  fallback: string[]): string[] {\n\tif (!options.hasOwnProperty(key)) {\n\t\treturn\tfallback\n\t}\n\tconst\tval = options[key]\n\tif (val === undefined || val === null || val === '') {\n\t\treturn\tfallback\n\t}\n\n\tif (typeof val === 'string') {\n\t\treturn\t[ val ]\n\t}\n\n\tif (!Array.isArray(val)) {\n\t\treturn\tfallback\n\t}\n\n\tconst\tarrayVal = val.filter((el) => (el !== undefined && el !== null && typeof el === 'string'))\n\tif (arrayVal.length === 0) {\n\t\treturn\tfallback\n\t}\n\n\treturn\tarrayVal\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import\t{ JSDOM, VirtualConsole }\tfrom 'jsdom'\nimport\t{ join as path_join }\t\tfrom 'path'\nimport\t{ normalize as path_normalize }\tfrom 'path'\nimport\t{ Script }\t\t\tfrom 'vm'\nimport\t{ RawSource }\t\t\tfrom 'webpack-sources'\n\nimport\t* as bc\t\t\t\tfrom './buildCode'\n\nexport\tconst BuildSourceCodeAndAssets = bc.BuildSourceCodeAndAssets\nexport\ttype IAsset = bc.IAsset\nexport\ttype IAssetsIndex = bc.IAssetsIndex\nexport\ttype ISourceCodeAndAssets = bc.ISourceCodeAndAssets\n\nexport\tinterface IRendererOptions {\n\tassets: bc.IAssetsIndex\n\tpath: string\n\tpublicPrefix: string\n}\n\nexport\tinterface IRendererMultipleOutput {\n\t[file: string]: string\n}\n\nexport\ttype RendererOutputRaw = string|IRendererMultipleOutput\nexport\ttype RendererOutput = RendererOutputRaw|Promise<RendererOutputRaw>\nexport\ttype Renderer = (options: IRendererOptions) => RendererOutput\n\nexport function CompileAndGetDOM(entry: string, sourceCode: string): JSDOM {\n\tconst virtualConsole = new VirtualConsole()\n\n\tvirtualConsole.on('debug',\t(m: any, args: any) => (args === undefined ? console.debug(m) : console.debug(m, args)))\n\tvirtualConsole.on('error',\t(m: any, args: any) => (args === undefined ? console.error(m) : console.error(m, args)))\n\tvirtualConsole.on('info',\t(m: any, args: any) => (args === undefined ? console.info(m) : console.info(m, args)))\n\tvirtualConsole.on('warn',\t(m: any, args: any) => (args === undefined ? console.warn(m) : console.warn(m, args)))\n\tvirtualConsole.on('log',\t(m: any, args: any) => (args === undefined ? console.log(m) : console.log(m, args)))\n\n\tconst options: any = {\n\t\tpretendToBeVisual: true,\n\t\trunScripts: 'outside-only',\n\t\tvirtualConsole,\n\n\t\tbeforeParse(window: any) {\n\t\t\tif (!window.hasOwnProperty('localStorage')) {\n\t\t\t\twindow.localStorage = (((localStore: {[key: string]: string}): any => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgetItem(key: string): string {\n\t\t\t\t\t\t\treturn localStore[key]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetItem(key: string, value: string) {\n\t\t\t\t\t\t\tlocalStore[key] = value\n\t\t\t\t\t\t},\n\t\t\t\t\t\tremoveItem(key: string) {\n\t\t\t\t\t\t\tdelete this[key]\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t})({}))\n\t\t\t}\n\t\t},\n\t}\n\n\tconst\tdom = new JSDOM('', options)\n\n\ttry {\n\t\tdom.runVMScript(new Script(sourceCode))\n\t\tconst window = (dom.window as any)\n\n\t\tif (!window.hasOwnProperty('default') || typeof window.default !== 'function') {\n\t\t\tthrow new Error('Default export from \"' + entry + '\" must be a function.')\n\t\t}\n\n\t\treturn\tdom\n\t} catch (err) {\n\t\tthrow err\n\t}\n}\n\nexport function renderPaths(\n\t\tpaths: string[], wsr: Renderer,\n\t\tcoreOptions: IRendererOptions, compilation: any): Promise<string[]> {\n\tconst\trenderPromises = paths.map((outputPath: string) => {\n\t\tconst options: IRendererOptions = Object.assign(coreOptions, { path: outputPath })\n\n\t\treturn\tbuildPromiseForPath(options, wsr)\n\t\t\t.then(storeStaticFile(compilation))\n\t\t\t.catch((err) => {\n\t\t\t\tcompilation.errors.push(err.stack)\n\t\t\t})\n\t\t})\n\n\treturn\tPromise.all(renderPromises)\n\t\t.then((alls: Array<void|ICrawlable[]>): string[] => {\n\t\t\treturn\t[].concat.call([], alls).filter((e) => (typeof e === 'string'))\n\t\t})\n}\n\nfunction buildPromiseForPath(options: IRendererOptions, ssr: Renderer): Promise<IRendererMultipleOutput> {\n\treturn\tnew Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tresolve(getIMultipleOutput(options.path, ssr(options)))\n\t\t} catch (err) {\n\t\t\t// console.log(['defaultFunc', err])\n\t\t\treject(err)\n\t\t}\n\t})\n}\n\ninterface ICrawlable {\n\tassetName: string\n\tsource: string\n}\n\nfunction storeStaticFile(compilation: any): ((output: IRendererMultipleOutput) => ICrawlable[]) {\n\treturn\t(output: IRendererMultipleOutput): ICrawlable[] => {\n\t\treturn\tObject.keys(output)\n\t\t\t.map(prepareAsset(output))\n\t\t\t.filter(removeAlreadySetAsset(compilation.assets))\n\t\t\t.map(({ key, rawSource, assetName, source }): ICrawlable => {\n\t\t\t\tcompilation.assets[assetName] = rawSource\n\t\t\t\treturn\t{ assetName, source }\n\t\t\t})\n\t}\n}\n\nfunction prepareAsset(output: IRendererMultipleOutput) {\n\treturn\t(key: string) => {\n\t\tconst source\t= output[key]\n\t\tconst rawSource = new RawSource(source)\n\t\tconst assetName = normalizeAssetName(key)\n\t\treturn\t{ key, rawSource, assetName, source }\n\t}\n}\n\nfunction removeAlreadySetAsset(assets: any) {\n\treturn\t( { assetName } ) => !assets.hasOwnProperty(assetName)\n}\n\nfunction normalizeAssetName(rawPath: string): string {\n\tconst relativePath = path_normalize(rawPath.replace(/^[\\/\\\\]+/, ''))\n\n\tif (relativePath.toLowerCase().match(/\\.html?$/) ) {\n\t\treturn\trelativePath\n\t}\n\treturn\tpath_join(relativePath, 'index.html')\n\n}\n\nfunction isIRendererMultipleOutput(v: any): v is IRendererMultipleOutput {\n\tconst irmo = v as IRendererMultipleOutput\n\treturn typeof irmo === 'object'\n}\n\nfunction isPromiseAny(v: any): v is Promise<IRendererMultipleOutput|string> {\n\tconst prom = v as Promise<IRendererMultipleOutput|string>\n\treturn\tprom.then !== undefined\n}\n\nfunction getIMultipleOutput(key: string, output: any): Promise<IRendererMultipleOutput> {\n\tif (isPromiseAny(output)) {\n\t\tconst prom =\toutput as Promise<IRendererMultipleOutput|string>\n\t\treturn\tprom.then((el: IRendererMultipleOutput|string): IRendererMultipleOutput => {\n\t\t\tif (isIRendererMultipleOutput(el)) {\n\t\t\t\tconst irmo = el as IRendererMultipleOutput\n\t\t\t\treturn irmo\n\t\t\t}\n\n\t\t\tconst pobj: IRendererMultipleOutput = {}\n\t\t\tpobj[key] = el\n\t\t\treturn pobj\n\t\t})\n\t}\n\n\tif (isIRendererMultipleOutput(output)) {\n\t\tconst irmo = output as IRendererMultipleOutput\n\t\treturn Promise.resolve(irmo)\n\t}\n\n\tconst obj: IRendererMultipleOutput = {}\n\tobj[key] = output\n\treturn Promise.resolve(obj)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/internals/index.ts","module.exports = require(\"jsdom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsdom\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"vm\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vm\"\n// module id = 19\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nexports.Source = require(\"./Source\");\r\n\r\nexports.RawSource = require(\"./RawSource\");\r\nexports.OriginalSource = require(\"./OriginalSource\");\r\nexports.SourceMapSource = require(\"./SourceMapSource\");\r\nexports.LineToLineMappedSource = require(\"./LineToLineMappedSource\");\r\n\r\nexports.CachedSource = require(\"./CachedSource\");\r\nexports.ConcatSource = require(\"./ConcatSource\");\r\nexports.ReplaceSource = require(\"./ReplaceSource\");\r\nexports.PrefixSource = require(\"./PrefixSource\");\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/index.js\n// module id = 20\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/base64.js\n// module id = 21\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/mapping-list.js\n// module id = 22\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/source-map-consumer.js\n// module id = 23\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/binary-search.js\n// module id = 24\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/quick-sort.js\n// module id = 25\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-map/lib/source-node.js\n// module id = 26\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\n\r\nclass RawSource extends Source {\r\n\tconstructor(value) {\r\n\t\tsuper();\r\n\t\tthis._value = value;\r\n\t}\r\n\r\n\tsource() {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tmap(options) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tnode(options) {\r\n\t\treturn new SourceNode(null, null, null, this._value);\r\n\t}\r\n\r\n\tlistMap(options) {\r\n\t\treturn new SourceListMap(this._value);\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(this._value);\r\n\t}\r\n}\r\n\r\nmodule.exports = RawSource;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/RawSource.js\n// module id = 27\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst base64VLQ = require(\"./base64-vlq\");\r\nconst SourceNode = require(\"./SourceNode\");\r\nconst CodeNode = require(\"./CodeNode\");\r\nconst SourceListMap = require(\"./SourceListMap\");\r\n\r\nmodule.exports = function fromStringWithSourceMap(code, map) {\r\n\tconst sources = map.sources;\r\n\tconst sourcesContent = map.sourcesContent;\r\n\tconst mappings = map.mappings.split(\";\");\r\n\tconst lines = code.split(\"\\n\");\r\n\tconst nodes = [];\r\n\tlet currentNode = null;\r\n\tlet currentLine = 1;\r\n\tlet currentSourceIdx = 0;\r\n\tlet currentSourceNodeLine;\r\n\tmappings.forEach(function(mapping, idx) {\r\n\t\tlet line = lines[idx];\r\n\t\tif(typeof line === 'undefined') return;\r\n\t\tif(idx !== lines.length - 1) line += \"\\n\";\r\n\t\tif(!mapping)\r\n\t\t\treturn addCode(line);\r\n\t\tmapping = { value: 0, rest: mapping };\r\n\t\tlet lineAdded = false;\r\n\t\twhile(mapping.rest)\r\n\t\t\tlineAdded = processMapping(mapping, line, lineAdded) || lineAdded;\r\n\t\tif(!lineAdded)\r\n\t\t\taddCode(line);\r\n\t});\r\n\tif(mappings.length < lines.length) {\r\n\t\tlet idx = mappings.length;\r\n\t\twhile(!lines[idx].trim() && idx < lines.length-1) {\r\n\t\t\taddCode(lines[idx] + \"\\n\");\r\n\t\t\tidx++;\r\n\t\t}\r\n\t\taddCode(lines.slice(idx).join(\"\\n\"));\r\n\t}\r\n\treturn new SourceListMap(nodes);\r\n\tfunction processMapping(mapping, line, ignore) {\r\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\r\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\t}\r\n\t\tif(!mapping.rest)\r\n\t\t\treturn false;\r\n\t\tif(mapping.rest[0] === \",\") {\r\n\t\t\tmapping.rest = mapping.rest.substr(1);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\tconst sourceIdx = mapping.value + currentSourceIdx;\r\n\t\tcurrentSourceIdx = sourceIdx;\r\n\r\n\t\tlet linePosition;\r\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\r\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\t\tlinePosition = mapping.value + currentLine;\r\n\t\t\tcurrentLine = linePosition;\r\n\t\t} else {\r\n\t\t\tlinePosition = currentLine;\r\n\t\t}\r\n\r\n\t\tif(mapping.rest) {\r\n\t\t\tconst next = mapping.rest.indexOf(\",\");\r\n\t\t\tmapping.rest = next === -1 ? \"\" : mapping.rest.substr(next);\r\n\t\t}\r\n\r\n\t\tif(!ignore) {\r\n\t\t\taddSource(line, sources ? sources[sourceIdx] : null, sourcesContent ? sourcesContent[sourceIdx] : null, linePosition)\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\tfunction addCode(generatedCode) {\r\n\t\tif(currentNode && currentNode instanceof CodeNode) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t} else if(currentNode && currentNode instanceof SourceNode && !generatedCode.trim()) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t\tcurrentSourceNodeLine++;\r\n\t\t} else {\r\n\t\t\tcurrentNode = new CodeNode(generatedCode);\r\n\t\t\tnodes.push(currentNode);\r\n\t\t}\r\n\t}\r\n\tfunction addSource(generatedCode, source, originalSource, linePosition) {\r\n\t\tif(currentNode && currentNode instanceof SourceNode &&\r\n\t\t\tcurrentNode.source === source &&\r\n\t\t\tcurrentSourceNodeLine === linePosition\r\n\t\t) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t\tcurrentSourceNodeLine++;\r\n\t\t} else {\r\n\t\t\tcurrentNode = new SourceNode(generatedCode, source, originalSource, linePosition);\r\n\t\t\tcurrentSourceNodeLine = linePosition + 1;\r\n\t\t\tnodes.push(currentNode);\r\n\t\t}\r\n\t}\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/source-list-map/lib/fromStringWithSourceMap.js\n// module id = 28\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar Source = require(\"./Source\");\r\n\r\nfunction isSplitter(c) {\r\n\tswitch(c) {\r\n\t\tcase 10: // \\n\r\n\t\tcase 13: // \\r\r\n\t\tcase 59: // ;\r\n\t\tcase 123: // {\r\n\t\tcase 125: // }\r\n\t\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction _splitCode(code) {\r\n\tvar result = [];\r\n\tvar i = 0;\r\n\tvar j = 0;\r\n\tfor(; i < code.length; i++) {\r\n\t\tif(isSplitter(code.charCodeAt(i))) {\r\n\t\t\twhile(isSplitter(code.charCodeAt(++i)));\r\n\t\t\tresult.push(code.substring(j, i));\r\n\t\t\tj = i;\r\n\t\t}\r\n\t}\r\n\tif(j < code.length)\r\n\t\tresult.push(code.substr(j));\r\n\treturn result;\r\n}\r\n\r\nclass OriginalSource extends Source {\r\n\tconstructor(value, name) {\r\n\t\tsuper();\r\n\t\tthis._value = value;\r\n\t\tthis._name = name;\r\n\t}\r\n\r\n\tsource() {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tnode(options) {\r\n\t\toptions = options || {};\r\n\t\tvar sourceMap = this._sourceMap;\r\n\t\tvar value = this._value;\r\n\t\tvar name = this._name;\r\n\t\tvar lines = value.split(\"\\n\");\r\n\t\tvar node = new SourceNode(null, null, null,\r\n\t\t\tlines.map(function(line, idx) {\r\n\t\t\t\tvar pos = 0;\r\n\t\t\t\tif(options.columns === false) {\r\n\t\t\t\t\tvar content = line + (idx != lines.length - 1 ? \"\\n\" : \"\");\r\n\t\t\t\t\treturn new SourceNode(idx + 1, 0, name, content);\r\n\t\t\t\t}\r\n\t\t\t\treturn new SourceNode(null, null, null,\r\n\t\t\t\t\t_splitCode(line + (idx != lines.length - 1 ? \"\\n\" : \"\")).map(function(item) {\r\n\t\t\t\t\t\tif(/^\\s*$/.test(item)) return item;\r\n\t\t\t\t\t\tvar res = new SourceNode(idx + 1, pos, name, item);\r\n\t\t\t\t\t\tpos += item.length;\r\n\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t\tnode.setSourceContent(name, value);\r\n\t\treturn node;\r\n\t}\r\n\r\n\tlistMap(options) {\r\n\t\treturn new SourceListMap(this._value, this._name, this._value)\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(this._value);\r\n\t}\r\n}\r\n\r\nrequire(\"./SourceAndMapMixin\")(OriginalSource.prototype);\r\n\r\nmodule.exports = OriginalSource;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/OriginalSource.js\n// module id = 29\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nvar SourceMapGenerator = require(\"source-map\").SourceMapGenerator;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\r\nvar Source = require(\"./Source\");\r\n\r\nclass SourceMapSource extends Source {\r\n\tconstructor(value, name, sourceMap, originalSource, innerSourceMap) {\r\n\t\tsuper();\r\n\t\tthis._value = value;\r\n\t\tthis._name = name;\r\n\t\tthis._sourceMap = sourceMap;\r\n\t\tthis._originalSource = originalSource;\r\n\t\tthis._innerSourceMap = innerSourceMap;\r\n\t}\r\n\r\n\tsource() {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tnode(options) {\r\n\t\tvar innerSourceMap = this._innerSourceMap;\r\n\t\tvar sourceMap = this._sourceMap;\r\n\t\tif(innerSourceMap) {\r\n\t\t\tsourceMap = SourceMapGenerator.fromSourceMap(new SourceMapConsumer(sourceMap));\r\n\t\t\tif(this._originalSource)\r\n\t\t\t\tsourceMap.setSourceContent(this._name, this._originalSource);\r\n\t\t\tinnerSourceMap = new SourceMapConsumer(innerSourceMap);\r\n\t\t\tsourceMap.applySourceMap(innerSourceMap, this._name);\r\n\t\t\tsourceMap = sourceMap.toJSON();\r\n\t\t}\r\n\t\treturn SourceNode.fromStringWithSourceMap(this._value, new SourceMapConsumer(sourceMap));\r\n\t}\r\n\r\n\tlistMap(options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.module === false)\r\n\t\t\treturn new SourceListMap(this._value, this._name, this._value);\r\n\t\treturn fromStringWithSourceMap(this._value, typeof this._sourceMap === \"string\" ? JSON.parse(this._sourceMap) : this._sourceMap);\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(this._value);\r\n\t\tif(this._originalSource)\r\n\t\t\thash.update(this._originalSource);\r\n\t}\r\n}\r\n\r\nrequire(\"./SourceAndMapMixin\")(SourceMapSource.prototype);\r\n\r\nmodule.exports = SourceMapSource;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/SourceMapSource.js\n// module id = 30\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar Source = require(\"./Source\");\r\n\r\nclass LineToLineMappedSource extends Source {\r\n\tconstructor(value, name, originalSource) {\r\n\t\tsuper();\r\n\t\tthis._value = value;\r\n\t\tthis._name = name;\r\n\t\tthis._originalSource = originalSource;\r\n\t}\r\n\r\n\tsource() {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tnode(options) {\r\n\t\tvar value = this._value;\r\n\t\tvar name = this._name;\r\n\t\tvar lines = value.split(\"\\n\");\r\n\t\tvar node = new SourceNode(null, null, null,\r\n\t\t\tlines.map(function(line, idx) {\r\n\t\t\t\treturn new SourceNode(idx + 1, 0, name, (line + (idx != lines.length - 1 ? \"\\n\" : \"\")));\r\n\t\t\t})\r\n\t\t);\r\n\t\tnode.setSourceContent(name, this._originalSource);\r\n\t\treturn node;\r\n\t}\r\n\r\n\tlistMap(options) {\r\n\t\treturn new SourceListMap(this._value, this._name, this._originalSource)\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(this._value);\r\n\t\thash.update(this._originalSource);\r\n\t}\r\n}\r\n\r\nrequire(\"./SourceAndMapMixin\")(LineToLineMappedSource.prototype);\r\n\r\nmodule.exports = LineToLineMappedSource;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/LineToLineMappedSource.js\n// module id = 31\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Source = require(\"./Source\");\r\n\r\nclass CachedSource extends Source {\r\n\tconstructor(source) {\r\n\t\tsuper();\r\n\t\tthis._source = source;\r\n\t\tthis._cachedSource = undefined;\r\n\t\tthis._cachedSize = undefined;\r\n\t\tthis._cachedMaps = {};\r\n\r\n\t\tif(source.node) this.node = function(options) {\r\n\t\t\treturn this._source.node(options);\r\n\t\t};\r\n\r\n\t\tif(source.listMap) this.listMap = function(options) {\r\n\t\t\treturn this._source.listMap(options);\r\n\t\t};\r\n\t}\r\n\r\n\tsource() {\r\n\t\tif(typeof this._cachedSource !== \"undefined\") return this._cachedSource;\r\n\t\treturn this._cachedSource = this._source.source();\r\n\t}\r\n\r\n\tsize() {\r\n\t\tif(typeof this._cachedSize !== \"undefined\") return this._cachedSize;\r\n\t\tif(typeof this._cachedSource !== \"undefined\")\r\n\t\t\treturn this._cachedSize = this._cachedSource.length;\r\n\t\treturn this._cachedSize = this._source.size();\r\n\t}\r\n\r\n\tsourceAndMap(options) {\r\n\t\tconst key = JSON.stringify(options);\r\n\t\tif(typeof this._cachedSource !== \"undefined\" && key in this._cachedMaps)\r\n\t\t\treturn {\r\n\t\t\t\tsource: this._cachedSource,\r\n\t\t\t\tmap: this._cachedMaps[key]\r\n\t\t\t};\r\n\t\telse if(typeof this._cachedSource !== \"undefined\") {\r\n\t\t\treturn {\r\n\t\t\t\tsource: this._cachedSource,\r\n\t\t\t\tmap: this._cachedMaps[key] = this._source.map(options)\r\n\t\t\t};\r\n\t\t} else if(key in this._cachedMaps) {\r\n\t\t\treturn {\r\n\t\t\t\tsource: this._cachedSource = this._source.source(),\r\n\t\t\t\tmap: this._cachedMaps[key]\r\n\t\t\t};\r\n\t\t}\r\n\t\tconst result = this._source.sourceAndMap(options);\r\n\t\tthis._cachedSource = result.source;\r\n\t\tthis._cachedMaps[key] = result.map;\r\n\t\treturn {\r\n\t\t\tsource: this._cachedSource,\r\n\t\t\tmap: this._cachedMaps[key]\r\n\t\t};\r\n\t}\r\n\r\n\tmap(options) {\r\n\t\tif(!options) options = {};\r\n\t\tconst key = JSON.stringify(options);\r\n\t\tif(key in this._cachedMaps)\r\n\t\t\treturn this._cachedMaps[key];\r\n\t\treturn this._cachedMaps[key] = this._source.map();\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\tthis._source.updateHash(hash);\r\n\t}\r\n}\r\n\r\nmodule.exports = CachedSource;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/CachedSource.js\n// module id = 32\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst SourceNode = require(\"source-map\").SourceNode;\r\nconst SourceListMap = require(\"source-list-map\").SourceListMap;\r\nconst Source = require(\"./Source\");\r\n\r\nclass ConcatSource extends Source {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.children = [];\r\n\t\tfor(var i = 0; i < arguments.length; i++) {\r\n\t\t\tvar item = arguments[i];\r\n\t\t\tif(item instanceof ConcatSource) {\r\n\t\t\t\tvar children = item.children;\r\n\t\t\t\tfor(var j = 0; j < children.length; j++)\r\n\t\t\t\t\tthis.children.push(children[j]);\r\n\t\t\t} else {\r\n\t\t\t\tthis.children.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tadd(item) {\r\n\t\tif(item instanceof ConcatSource) {\r\n\t\t\tvar children = item.children;\r\n\t\t\tfor(var j = 0; j < children.length; j++)\r\n\t\t\t\tthis.children.push(children[j]);\r\n\t\t} else {\r\n\t\t\tthis.children.push(item);\r\n\t\t}\r\n\t}\r\n\r\n\tsource() {\r\n\t\tlet source = \"\";\r\n\t\tconst children = this.children;\r\n\t\tfor(let i = 0; i < children.length; i++) {\r\n\t\t\tconst child = children[i];\r\n\t\t\tsource += typeof child === \"string\" ? child : child.source();\r\n\t\t}\r\n\t\treturn source;\r\n\t}\r\n\r\n\tsize() {\r\n\t\tlet size = 0;\r\n\t\tconst children = this.children;\r\n\t\tfor(let i = 0; i < children.length; i++) {\r\n\t\t\tconst child = children[i];\r\n\t\t\tsize += typeof child === \"string\" ? child.length : child.size();\r\n\t\t}\r\n\t\treturn size;\r\n\t}\r\n\r\n\tnode(options) {\r\n\t\tconst node = new SourceNode(null, null, null, this.children.map(function(item) {\r\n\t\t\treturn typeof item === \"string\" ? item : item.node(options);\r\n\t\t}));\r\n\t\treturn node;\r\n\t}\r\n\r\n\tlistMap(options) {\r\n\t\tconst map = new SourceListMap();\r\n\t\tvar children = this.children;\r\n\t\tfor(var i = 0; i < children.length; i++) {\r\n\t\t\tvar item = children[i];\r\n\t\t\tif(typeof item === \"string\")\r\n\t\t\t\tmap.add(item);\r\n\t\t\telse\r\n\t\t\t\tmap.add(item.listMap(options));\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\tvar children = this.children;\r\n\t\tfor(var i = 0; i < children.length; i++) {\r\n\t\t\tvar item = children[i];\r\n\t\t\tif(typeof item === \"string\")\r\n\t\t\t\thash.update(item);\r\n\t\t\telse\r\n\t\t\t\titem.updateHash(hash);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nrequire(\"./SourceAndMapMixin\")(ConcatSource.prototype);\r\n\r\nmodule.exports = ConcatSource;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/ConcatSource.js\n// module id = 33\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\n\r\nclass ReplaceSource extends Source {\r\n\tconstructor(source, name) {\r\n\t\tsuper();\r\n\t\tthis._source = source;\r\n\t\tthis._name = name;\r\n\t\tthis.replacements = [];\r\n\t}\r\n\r\n\treplace(start, end, newValue) {\r\n\t\tif(typeof newValue !== \"string\")\r\n\t\t\tthrow new Error(\"insertion must be a string, but is a \" + typeof newValue);\r\n\t\tthis.replacements.push([start, end, newValue, this.replacements.length]);\r\n\t}\r\n\r\n\tinsert(pos, newValue) {\r\n\t\tif(typeof newValue !== \"string\")\r\n\t\t\tthrow new Error(\"insertion must be a string, but is a \" + typeof newValue + \": \" + newValue);\r\n\t\tthis.replacements.push([pos, pos - 1, newValue, this.replacements.length]);\r\n\t}\r\n\r\n\tsource(options) {\r\n\t\treturn this._replaceString(this._source.source());\r\n\t}\r\n\r\n\toriginal() {\r\n\t\treturn this._source;\r\n\t}\r\n\r\n\t_sortReplacements() {\r\n\t\tthis.replacements.sort(function(a, b) {\r\n\t\t\tvar diff = b[1] - a[1];\r\n\t\t\tif(diff !== 0)\r\n\t\t\t\treturn diff;\r\n\t\t\tdiff = b[0] - a[0];\r\n\t\t\tif(diff !== 0)\r\n\t\t\t\treturn diff;\r\n\t\t\treturn b[3] - a[3];\r\n\t\t});\r\n\t}\r\n\r\n\t_replaceString(str) {\r\n\t\tif(typeof str !== \"string\")\r\n\t\t\tthrow new Error(\"str must be a string, but is a \" + typeof str + \": \" + str);\r\n\t\tthis._sortReplacements();\r\n\t\tvar result = [str];\r\n\t\tthis.replacements.forEach(function(repl) {\r\n\t\t\tvar remSource = result.pop();\r\n\t\t\tvar splitted1 = this._splitString(remSource, Math.floor(repl[1] + 1));\r\n\t\t\tvar splitted2 = this._splitString(splitted1[0], Math.floor(repl[0]));\r\n\t\t\tresult.push(splitted1[1], repl[2], splitted2[0]);\r\n\t\t}, this);\r\n\r\n\t\t// write out result array in reverse order\r\n\t\tlet resultStr = \"\";\r\n\t\tfor(let i = result.length - 1; i >= 0; --i) {\r\n\t\t\tresultStr += result[i];\r\n\t\t}\r\n\t\treturn resultStr;\r\n\t}\r\n\r\n\tnode(options) {\r\n\t\tthis._sortReplacements();\r\n\t\tvar result = [this._source.node(options)];\r\n\t\tthis.replacements.forEach(function(repl) {\r\n\t\t\tvar remSource = result.pop();\r\n\t\t\tvar splitted1 = this._splitSourceNode(remSource, Math.floor(repl[1] + 1));\r\n\t\t\tvar splitted2;\r\n\t\t\tif(Array.isArray(splitted1)) {\r\n\t\t\t\tsplitted2 = this._splitSourceNode(splitted1[0], Math.floor(repl[0]));\r\n\t\t\t\tif(Array.isArray(splitted2)) {\r\n\t\t\t\t\tresult.push(splitted1[1], this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(splitted1[1], this._replacementToSourceNode(splitted1[1], repl[2]), splitted1[0]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsplitted2 = this._splitSourceNode(remSource, Math.floor(repl[0]));\r\n\t\t\t\tif(Array.isArray(splitted2)) {\r\n\t\t\t\t\tresult.push(this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(repl[2], remSource);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this);\r\n\t\tresult = result.reverse();\r\n\t\treturn new SourceNode(null, null, null, result);\r\n\t}\r\n\r\n\tlistMap(options) {\r\n\t\tthis._sortReplacements();\r\n\t\tvar map = this._source.listMap(options);\r\n\t\tvar currentIndex = 0;\r\n\t\tvar replacements = this.replacements;\r\n\t\tvar idxReplacement = replacements.length - 1;\r\n\t\tvar removeChars = 0;\r\n\t\tmap = map.mapGeneratedCode(function(str) {\r\n\t\t\tvar newCurrentIndex = currentIndex + str.length;\r\n\t\t\tif(removeChars > str.length) {\r\n\t\t\t\tremoveChars -= str.length;\r\n\t\t\t\tstr = \"\";\r\n\t\t\t} else {\r\n\t\t\t\tif(removeChars > 0) {\r\n\t\t\t\t\tstr = str.substr(removeChars);\r\n\t\t\t\t\tcurrentIndex += removeChars;\r\n\t\t\t\t\tremoveChars = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvar finalStr = \"\";\r\n\t\t\t\twhile(idxReplacement >= 0 && replacements[idxReplacement][0] < newCurrentIndex) {\r\n\t\t\t\t\tvar repl = replacements[idxReplacement];\r\n\t\t\t\t\tvar start = Math.floor(repl[0]);\r\n\t\t\t\t\tvar end = Math.floor(repl[1] + 1);\r\n\t\t\t\t\tvar before = str.substr(0, Math.max(0, start - currentIndex));\r\n\t\t\t\t\tif(end <= newCurrentIndex) {\r\n\t\t\t\t\t\tvar after = str.substr(Math.max(0, end - currentIndex));\r\n\t\t\t\t\t\tfinalStr += before + repl[2];\r\n\t\t\t\t\t\tstr = after;\r\n\t\t\t\t\t\tcurrentIndex = Math.max(currentIndex, end);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfinalStr += before + repl[2];\r\n\t\t\t\t\t\tstr = \"\";\r\n\t\t\t\t\t\tremoveChars = end - newCurrentIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tidxReplacement--;\r\n\t\t\t\t}\r\n\t\t\t\tstr = finalStr + str;\r\n\t\t\t}\r\n\t\t\tcurrentIndex = newCurrentIndex;\r\n\t\t\treturn str;\r\n\t\t});\r\n\t\tvar extraCode = \"\";\r\n\t\twhile(idxReplacement >= 0) {\r\n\t\t\textraCode += replacements[idxReplacement][2];\r\n\t\t\tidxReplacement--;\r\n\t\t}\r\n\t\tif(extraCode) {\r\n\t\t\tmap.add(extraCode);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\t_replacementToSourceNode(oldNode, newString) {\r\n\t\tvar map = oldNode.toStringWithSourceMap({\r\n\t\t\tfile: \"?\"\r\n\t\t}).map;\r\n\t\tvar original = new SourceMapConsumer(map.toJSON()).originalPositionFor({\r\n\t\t\tline: 1,\r\n\t\t\tcolumn: 0\r\n\t\t});\r\n\t\tif(original) {\r\n\t\t\treturn new SourceNode(original.line, original.column, original.source, newString);\r\n\t\t} else {\r\n\t\t\treturn newString;\r\n\t\t}\r\n\t}\r\n\r\n\t_splitSourceNode(node, position) {\r\n\t\tif(typeof node === \"string\") {\r\n\t\t\tif(node.length <= position) return position - node.length;\r\n\t\t\treturn position <= 0 ? [\"\", node] : [node.substr(0, position), node.substr(position)];\r\n\t\t} else {\r\n\t\t\tfor(var i = 0; i < node.children.length; i++) {\r\n\t\t\t\tposition = this._splitSourceNode(node.children[i], position);\r\n\t\t\t\tif(Array.isArray(position)) {\r\n\t\t\t\t\tvar leftNode = new SourceNode(\r\n\t\t\t\t\t\tnode.line,\r\n\t\t\t\t\t\tnode.column,\r\n\t\t\t\t\t\tnode.source,\r\n\t\t\t\t\t\tnode.children.slice(0, i).concat([position[0]]),\r\n\t\t\t\t\t\tnode.name\r\n\t\t\t\t\t);\r\n\t\t\t\t\tvar rightNode = new SourceNode(\r\n\t\t\t\t\t\tnode.line,\r\n\t\t\t\t\t\tnode.column,\r\n\t\t\t\t\t\tnode.source, [position[1]].concat(node.children.slice(i + 1)),\r\n\t\t\t\t\t\tnode.name\r\n\t\t\t\t\t);\r\n\t\t\t\t\tleftNode.sourceContents = node.sourceContents;\r\n\t\t\t\t\treturn [leftNode, rightNode];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn position;\r\n\t\t}\r\n\t}\r\n\r\n\t_splitString(str, position) {\r\n\t\treturn position <= 0 ? [\"\", str] : [str.substr(0, position), str.substr(position)];\r\n\t}\r\n}\r\n\r\nrequire(\"./SourceAndMapMixin\")(ReplaceSource.prototype);\r\n\r\nmodule.exports = ReplaceSource;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/ReplaceSource.js\n// module id = 34\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\n\r\nvar REPLACE_REGEX = /\\n(?=.|\\s)/g;\r\n\r\nfunction cloneAndPrefix(node, prefix, append) {\r\n\tif(typeof node === \"string\") {\r\n\t\tvar result = node.replace(REPLACE_REGEX, \"\\n\" + prefix);\r\n\t\tif(append.length > 0) result = append.pop() + result;\r\n\t\tif(/\\n$/.test(node)) append.push(prefix);\r\n\t\treturn result;\r\n\t} else {\r\n\t\tvar newNode = new SourceNode(\r\n\t\t\tnode.line,\r\n\t\t\tnode.column,\r\n\t\t\tnode.source,\r\n\t\t\tnode.children.map(function(node) {\r\n\t\t\t\treturn cloneAndPrefix(node, prefix, append);\r\n\t\t\t}),\r\n\t\t\tnode.name\r\n\t\t);\r\n\t\tnewNode.sourceContents = node.sourceContents;\r\n\t\treturn newNode;\r\n\t}\r\n};\r\n\r\nclass PrefixSource extends Source {\r\n\tconstructor(prefix, source) {\r\n\t\tsuper();\r\n\t\tthis._source = source;\r\n\t\tthis._prefix = prefix;\r\n\t}\r\n\r\n\tsource() {\r\n\t\tvar node = typeof this._source === \"string\" ? this._source : this._source.source();\r\n\t\tvar prefix = this._prefix;\r\n\t\treturn prefix + node.replace(REPLACE_REGEX, \"\\n\" + prefix);\r\n\t}\r\n\r\n\tnode(options) {\r\n\t\tvar node = this._source.node(options);\r\n\t\tvar append = [this._prefix];\r\n\t\treturn new SourceNode(null, null, null, [\r\n\t\t\tcloneAndPrefix(node, this._prefix, append)\r\n\t\t]);\r\n\t}\r\n\r\n\tlistMap(options) {\r\n\t\tvar prefix = this._prefix;\r\n\t\tvar map = this._source.listMap(options);\r\n\t\treturn map.mapGeneratedCode(function(code) {\r\n\t\t\treturn prefix + code.replace(REPLACE_REGEX, \"\\n\" + prefix);\r\n\t\t});\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\tif(typeof this._source === \"string\")\r\n\t\t\thash.update(this._source);\r\n\t\telse\r\n\t\t\tthis._source.updateHash(hash);\r\n\t\tif(typeof this._prefix === \"string\")\r\n\t\t\thash.update(this._prefix);\r\n\t\telse\r\n\t\t\tthis._prefix.updateHash(hash);\r\n\t}\r\n}\r\n\r\nrequire(\"./SourceAndMapMixin\")(PrefixSource.prototype);\r\n\r\nmodule.exports = PrefixSource;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)-sources/lib/PrefixSource.js\n// module id = 35\n// module chunks = 0","export interface IAsset {\n\tchunkname: string\n\tfilename: string\n\t[name: string]: any\n}\n\nexport interface IAssetsIndex {\n\t[name: string]: IAsset\n}\n\nexport interface ISourceCodeAndAssets {\n\tsourceCode: string\n\tassets: IAssetsIndex\n}\n\nexport function BuildSourceCodeAndAssets(entry: string, attrs: string[], compilation: any): ISourceCodeAndAssets {\n\tconst publicPath = publicPathname(compilation.options.output.publicPath)\n\n\tif (entry === '') {\n\t\tentry = (Object.keys(compilation.entrypoints))[0]\n\t}\n\n\tif (!compilation.entrypoints.hasOwnProperty(entry)) {\n\t\tthrow new Error('Source file not found: \"' + entry + '\"')\n\t}\n\n\tconst chunksOrder = indexEntryPoint(entry, compilation)\n\n\tconst jsfiles = AssetsFilesByLoadOrder(compilation, chunksOrder)\n\tconst assets = LoadableAssets(jsfiles, publicPath, chunksOrder)\n\t\t\t.map(exportAttrs(attrs, compilation))\n\t\t\t.reduce(exportAsset, {} as IAssetsIndex)\n\n\tconst sourceCode = SourceCodeFromFiles(jsfiles, compilation)\n\n\treturn\t{ assets, sourceCode }\n}\n\nfunction LoadableAssets(jsFile: string[], publicPath: pathRewriter, chunksOrder: IChunkOrder): IAsset[] {\n\treturn jsFile\n\t.map((file: string): IAsset => {\n\t\tconst chunkname = chunksOrder.file2chunk[file]\n\t\tconst filename = publicPath(file)\n\t\treturn\t{ chunkname, filename }\n\t})\n}\n\ntype pathRewriter = (file: string) => string\n\nfunction publicPathname(publicPrefix: string|undefined|null): pathRewriter {\n\tif (publicPrefix === null || publicPrefix === undefined || publicPrefix === '') {\n\t\treturn (file) => file\n\t}\n\treturn (file) => (publicPrefix + file)\n}\n\nfunction exportAttrs(toExportAttrs: string[], compilation: any): ((asset: IAsset) => IAsset) {\n\tconst\tassets = compilation.assets\n\treturn (asset: IAsset): IAsset => {\n\t\ttoExportAttrs.forEach((attr) => {\n\t\t\tconst sourceAsset = assets[asset.filename]\n\t\t\tif (sourceAsset.hasOwnProperty(attr)) {\n\t\t\t\tasset[attr] = sourceAsset[attr]\n\t\t\t}\n\t\t})\n\t\treturn\tasset\n\t}\n}\n\nfunction exportAsset(assets: IAssetsIndex, asset: IAsset): IAssetsIndex {\n\tassets[asset.filename] = asset\n\treturn\tassets\n}\n\ninterface IChunkOrder {\n\tchunk2pos: {\n\t\t[chunk: number]: number,\n\t}\n\tpos2chunk: {\n\t\t[pos: number]: number,\n\t},\n\tname2pos: {\n\t\t[name: string]: number,\n\t},\n\tname2chunk: {\n\t\t[name: string]: number,\n\t},\n\tfile2chunk: {\n\t\t[name: string]: string,\n\t}\n}\n\nfunction indexEntryPoint(entry: string, compilation: any): IChunkOrder {\n\tconst\temptyIndex: IChunkOrder = {\n\t\tchunk2pos: {},\n\t\tfile2chunk: {},\n\t\tname2chunk: {},\n\t\tname2pos: {},\n\t\tpos2chunk: {},\n\t}\n\n\treturn\tcompilation.entrypoints[entry].chunks\n\t\t.map(prepareIChunkIndex)\n\t\t.reduce(assembleChunkIndex, emptyIndex)\n}\n\ninterface IChunkIndex {\n\tname: string\n\tid: number\n\tpos: number\n\tfiles: string[]\n}\n\nfunction prepareIChunkIndex(e: any, pos: number): IChunkIndex {\n\tconst name: string = e.name\n\tconst id: number = e.id\n\tlet files = e.files\n\tif (!(e.files instanceof Array)) {\n\t\tfiles = [ files ]\n\t}\n\n\treturn { name, id, pos, files }\n}\n\nfunction assembleChunkIndex(hash: IChunkOrder, e: IChunkIndex): IChunkOrder {\n\thash.chunk2pos[e.id] = e.pos\n\thash.pos2chunk[e.pos] = e.id\n\thash.name2chunk[e.name] = e.id\n\thash.name2pos[e.name] = e.pos\n\n\te.files.forEach((file: string) => {\n\t\thash.file2chunk[file] = e.name\n\t})\n\treturn\thash\n}\n\nfunction AssetsFilesByLoadOrder(compilation: any, chunksOrder: IChunkOrder): string[] {\n\treturn\tObject.keys(compilation.assets)\n\t\t.map(nameToIAssetDescriptor(chunksOrder))\n\t\t.filter(noSortableAsset)\n\t\t.sort(byAssetOrder)\n\t\t.map(getAssetName)\n}\n\ninterface IAssetDescriptor {\n\tname:\tstring\n\tpos:\tnumber\n\torder:\tnumber\n}\n\nfunction nameToIAssetDescriptor(chunksOrder: IChunkOrder): ((name: string, pos: number) => IAssetDescriptor) {\n\treturn\t(name: string, pos: number): IAssetDescriptor => {\n\t\tconst order: number = chunksOrder.chunk2pos[pos]\n\t\treturn { name, pos, order }\n\t}\n}\n\nfunction noSortableAsset(e: IAssetDescriptor) {\n\treturn\te.order !== undefined\n}\n\ntype\tsortedReturn\t= 1|0|-1\nfunction byAssetOrder(a: IAssetDescriptor, b: IAssetDescriptor): sortedReturn {\n\tif (a.order < b.order) {\n\t\treturn -1\n\t}\n\tif (a.order > b.order) {\n\t\treturn 1\n\t}\n\treturn 0\n}\n\nfunction getAssetName(e: IAssetDescriptor): string {\n\treturn e.name\n}\n\nfunction SourceCodeFromFiles(files: string[], compilation: any): string {\n\treturn files.map((name: string) => {\n\t\tlet myChunk = compilation.assets[name]\n\t\tif (myChunk instanceof Array) {\n\t\t\tmyChunk = myChunk[0]\n\t\t}\n\t\tif (myChunk instanceof Object) {\n\t\t\tmyChunk = myChunk.source()\n\t\t}\n\t\treturn\tmyChunk\n\t}).join('\\n\\n')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/internals/buildCode.ts"],"sourceRoot":""}